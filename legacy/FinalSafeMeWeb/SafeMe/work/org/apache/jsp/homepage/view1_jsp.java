/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.28
 * Generated at: 2015-12-16 05:33:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.homepage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class view1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


           public static String change_Code(String line, String oldString, String newString)
           {
                       for(int index = 0; (index = line.indexOf(oldString, index)) >= 0; index += newString.length())
                                   line = line.substring(0, index) + newString + line.substring(index + oldString.length());
                       return line;
           }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Home.jsp", out, false);
      out.write("</br></br>\r\n");
      out.write("<title>글 내용 보기</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"white\" text=\"black\" link=\"blue\" vlink=\"red\" alink=\"red\" style=\"font-family:돋움;\">\r\n");

try {
        String b_name,b_mail,b_title,b_content,b_date,b_pwd,mailtoyou;
        int b_id,b_view;
        
        String bid=request.getParameter("bid"); 

        Class.forName("com.mysql.jdbc.Driver"); 

        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/safemetest","root","test123"); 

        Statement stmt = conn.createStatement();
	String sql="select b_id,b_name,b_mail,b_title,b_content,date_format(b_date,'%Y/%c/%e %H:%i:%s'),b_view,b_pwd from board where b_id="+bid; 
        ResultSet rs = stmt.executeQuery(sql);  
        if(rs.next()) {   
                b_id=rs.getInt(1);
                b_name=rs.getString(2);
                b_mail=rs.getString(3);
                b_title=rs.getString(4);
                b_content=rs.getString(5);
                b_content=this.change_Code(b_content,"\n","<br>"); 
                b_date=rs.getString(6);
                b_view=rs.getInt(7);
                b_pwd=rs.getString(8);
                if(!b_mail.equals("")) {
                        mailtoyou="(<font size=2><a href=mailto:"+b_mail+">"+b_mail+"</a></font>)";
                } else {
                        mailtoyou="";
                }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div align=\"center\"><h1>글 내용보기</h1>\r\n");
      out.write("<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"900\">\r\n");
      out.write("    <tr>\r\n");
      out.write("        <td bgcolor=\"#000000\"><table border=\"3\" cellpadding=\"2\" cellspacing=\"1\"\r\n");
      out.write("             width=\"100%\">\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th align=\"center\" colspan=\"2\" bgcolor=\"#000000\"><p><font\r\n");
      out.write("                         size=\"2\" color=\"white\"><b>");
      out.print(b_title);
      out.write("</b></font></th>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th align=\"center\" bgcolor=\"#FFFFFF\"><p><font size=\"2\">이름<br>\r\n");
      out.write("                        날짜<br>\r\n");
      out.write("                        조회<br></font></th>\r\n");
      out.write("                    <td bgcolor=\"#FFFFFF\"><p><font size=\"2\"><b>");
      out.print(b_name);
      out.write("</b></font><font\r\n");
      out.write("                         size=\"2\">");
      out.print(mailtoyou);
      out.write("<br>\r\n");
      out.write("                        </font><font size=\"2\"><b>");
      out.print(b_date);
      out.write("</b></font><font\r\n");
      out.write("                         size=\"2\"><br>\r\n");
      out.write("                        </font><font size=\"2\"><b>");
      out.print(b_view);
      out.write("</b></font><font size=\"2\"><br></font></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td colspan=\"2\" bgcolor=\"#FFFFFF\"><table border=\"0\" cellpadding=\"20\"\r\n");
      out.write("                         cellspacing=\"0\">\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <td><p><font size=\"2\">");
      out.print(b_content);
      out.write("</font></td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                        </table></td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </table></td>\r\n");
      out.write("    </tr>\r\n");
      out.write("</table></div>\r\n");
      out.write("<p align=center><font size=2><a href=list1.jsp>목록으로</a> /\r\n");
      out.write("<a href=modify1.jsp?b_id=");
      out.print(b_id);
      out.write("> 수정 </a> / \r\n");
      out.write("<a href=delete1.jsp?b_id=");
      out.print(b_id);
      out.write("> 삭제</a></font></p>\r\n");

    }
        rs.close(); 

        stmt.executeUpdate("update board set b_view=b_view+1 where b_id="+bid+"");  //조회수를 올린다

        stmt.close();
        conn.close();
} catch (Exception e) {
	out.println(e);
}

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write('\r');
      out.write('\n');
      out.write(' ');
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
