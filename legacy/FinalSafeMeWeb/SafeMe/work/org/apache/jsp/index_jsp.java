/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.28
 * Generated at: 2015-12-14 06:49:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;
import com.oreilly.servlet.*;
import org.apache.jasper.*;
import java.util.*;
import java.net.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("com.oreilly.servlet");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.net");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("org.apache.jasper");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.oreilly.servlet.multipart.DefaultFileRenamePolicy");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>SAFEME WEB SERVER</title>\r\n");
      out.write("<script src=\"/WEB-INF/js/jquery-1.11.3.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/WEB-INF/js/jwplayer.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/WEB-INF/css/style.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1>SAFEME WEB SERVER</h1>\r\n");
      out.write("\t\r\n");
      out.write("\t<h2>서버 아이피  : ");
 out.println(InetAddress.getLocalHost().getHostAddress()); 
      out.write("</h2>\r\n");
      out.write("\t\r\n");
      out.write("\t<h2>Home Page</h2>\r\n");
      out.write("\t\r\n");
      out.write("\t<div>\r\n");
      out.write("\t<h3>경찰서에서 사용하는 웹페이지</h3>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\t<li><a href=\"homepage/Home.jsp\">[Home.jsp] 경찰서에서 사용하는 웹Site </a>\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<h2>Back Page</h2>\r\n");
      out.write("\t\r\n");
      out.write("\t<div>\r\n");
      out.write("\t<h3>Notify</h3>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\t<li><a href=\"backpage/Notify_updateDB.jsp\">[Notify_updateDB.jsp] nofity 테이블에 데이터 insert</a>\r\n");
      out.write("\t\t<li><a href=\"backpage/Notify_drawTable.jsp\">[Notify_drawTable.jsp] nofity 테이블에 데이터 보기</a>\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div>\r\n");
      out.write("\t<h3>Video</h3>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\t<li><a href=\"backpage/Video_jwPlayer.jsp\">[Video_jwPlayer.jsp] 비디오 플레이어 테스트 페이지</a>\r\n");
      out.write("\t\t<li><a href=\"backpage/Video_saveFile.jsp\">[Video_saveFile.jsp] 비디오파일 wowza 서버에 저장</a></br>\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div>\r\n");
      out.write("\t<h3>Map</h3>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\t<li><a href=\"backpage/Footpos_getPos.jsp\">[Footpos_get.jsp] 전자발찌의 위치를 모바일앱으로 전송</a>\r\n");
      out.write("\t\t<li><a href=\"backpage/Policepos_getPos.jsp\">[Policeos_get.jsp] 경찰서의 위치를 모바일앱으로 전송</a>\r\n");
      out.write("\t\t<li><a href=\"backpage/Footpos_updateDB.jsp\">[Footpos_updateDB.jsp] 전자발찌의 위치를 DB에 insert/update</a>\r\n");
      out.write("\t\t<li><a href=\"backpage/Policepos_updateDB.jsp\">[Policepos_updateDB.jsp] policepos2 table에 아이디, 주소, 위도, 경도 insert</a>\r\n");
      out.write("\t\t<li><a href=\"backpage/Policepos_sendAddress.jsp\">[Policepos_sendAddress.jsp] policepos table에 저장된 경찰서의 주소 전송</a>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<h3>Server IP</h3>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\t<li><a href=\"backpage/Server_getServerIp.jsp\">[Server_getServerIp.jsp] 서버의 아이피 보내주기</a></li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
