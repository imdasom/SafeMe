package safeme.com.naver.cafe.safeme.video;import android.content.Intent;import android.content.SharedPreferences;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.support.v7.app.AppCompatActivity;import android.text.method.ScrollingMovementMethod;import android.util.Log;import android.view.View;import android.view.Window;import android.view.WindowManager;import android.widget.Button;import android.widget.TextView;import android.widget.Toast;import net.majorkernelpanic.streaming.gl.SurfaceView;import net.majorkernelpanic.streaming.rtp.MyMuxing;import java.io.IOException;import safeme.com.naver.cafe.safeme.R;import safeme.com.naver.cafe.safeme.constants.Constants;import safeme.com.naver.cafe.safeme.map.GpsManager;import safeme.com.naver.cafe.safeme.parser.JSONSender;import safeme.com.naver.cafe.safeme.video.streaming.MyStreaming;/** * '신고하기' 기능을 총괄하는 클래스 */public class MyVideoActivity extends AppCompatActivity{    // 메인 객체 선언    protected MyStreaming myStreaming;    protected MyMuxing myMuxing;    protected MyFile myFile;    protected String phonenum1, phonenum2;    protected String addr;    protected double lat;    protected double lng;    protected String serverip;    protected boolean SENDING, BACKPRESSED, NOTIFY;    protected GpsManager gpsManager;    // 레이아웃 관련 객체 선언    protected TextView logRecord;    protected Button btnRecord, stopAndSend, toMain;    public final static String TAG = "SsfeMe::MyVideoActivity";    protected String videofilepath;    protected MyVideoHandler myVideoHandler = new MyVideoHandler();    public class MyVideoHandler extends Handler {        @Override        public void handleMessage(Message msg) {            super.handleMessage(msg);            switch (msg.what) {                case Constants.ON_LOCATION_CHANGED:                    SharedPreferences sharedPreferences = getSharedPreferences("LAT_LNG_ADDR", 0);                    lat = Double.parseDouble(sharedPreferences.getString("lattitude", ""));                    lng = Double.parseDouble(sharedPreferences.getString("longitude", ""));                    addr = sharedPreferences.getString("address", "");                    sendingInfo();                    break;                case Constants.STREAM_ERROR:                    finish();                    break;                case Constants.ALL_FINISH:                    myMuxing.stopVideoMuxing();                    myMuxing.stopAudioMuxing();                    myMuxing.stopMediaMuxer();                    sendVideo();                    break;                case Constants.RECORD_FINISH:                    myMuxing.stopVideoMuxing();                    myMuxing.stopAudioMuxing();                    myMuxing.stopMediaMuxer();                    Message message = new Message();                    message.what = Constants.SENDING_VIDEO;                    sendMessage(message);                    break;                case Constants.SENDING_VIDEO:                    sendVideo();                    break;                case Constants.SEND_VIDEOFILE:                    stopAndSend.setBackgroundResource(R.drawable.button_green);                    if(BACKPRESSED) finish();                    break;                case Constants.SENDING_FINISH:                    stopAndSend.setBackgroundResource(R.drawable.button_green);                    break;                case Constants.FINISH_VIDEOACTIVITY:                    if(BACKPRESSED) finish();                    break;            }        }    }    public void sendVideo(){        Toast.makeText(getApplicationContext(), "파일을 전송하는 중입니다...", Toast.LENGTH_SHORT).show();        JSONSender sendVideo = new JSONSender();        sendVideo.setHandler(myVideoHandler);        sendVideo.setFilename(myFile.getFileName());        sendVideo.setParseType(Constants.SEND_VIDEOFILE);        sendVideo.setUrl(Constants.PARSING_URL + Constants.PARSING_DIR_VIDEO);        boolean isStartSend = false;        while(!isStartSend){            if(!myMuxing.isStartMuxing()){                sendVideo.start();                isStartSend = true;                SENDING = true;            }        }    }    @Override    protected void onCreate(Bundle savedInstanceState) {        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);        requestWindowFeature(Window.FEATURE_NO_TITLE);        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_video);        SENDING = false;        BACKPRESSED = false;        // Initialize Activity Layout        logRecord = (TextView)findViewById(R.id.log);        logRecord.setMovementMethod(new ScrollingMovementMethod());        logRecord.append("onCreate()\n");        stopAndSend = (Button)findViewById(R.id.stopAndSend);        stopAndSend.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (!SENDING) {                    Message msg = new Message();                    msg.what = Constants.RECORD_FINISH;                    myVideoHandler.sendMessage(msg);                }else{                    if(SENDING)                        stopAndSend.setBackgroundResource(R.drawable.button_green);                    else                        stopAndSend.setBackgroundResource(R.drawable.button_red);                }            }        });        toMain = (Button)findViewById(R.id.toMain);        toMain.setOnClickListener(new View.OnClickListener(){            @Override            public void onClick(View v) {                BACKPRESSED = true;                if (!SENDING) {                    Message msg = new Message();                    msg.what = Constants.ALL_FINISH;                    myVideoHandler.sendMessage(msg);                } else {                    /*Message msg = new Message();                    msg.what = Constants.FINISH_VIDEOACTIVITY;                    myVideoHandler.sendMessage(msg);*/                    finish();                }            }        });        // Initialize File        myFile = new MyFile();        // Initialize Streaming        logRecord.append("Initialize Streaming\n");        myStreaming = new MyStreaming();        myStreaming.setContext(getApplicationContext());        myStreaming.setHandler(myVideoHandler);        SurfaceView surfaceview = (SurfaceView)findViewById(R.id.surface);        myStreaming.setSurfaceView(surfaceview); //surfaceView를 세팅합니다.        try {            myMuxing = new MyMuxing(myFile.getPathName());            myStreaming.setMediaMuxer(myMuxing);            myStreaming.init(); //초기화해줍니다.        } catch (IOException e) {            e.printStackTrace();        }        // get Intent data        Intent intent = getIntent();        // get lat, lng, address and get phonenum        lat = intent.getDoubleExtra("lattitude", 0.0f);        lng = intent.getDoubleExtra("longitude", 0.0f);        addr = intent.getStringExtra("address");        phonenum1 = intent.getStringExtra("phonenum1");        phonenum2 = intent.getStringExtra("phonenum2");        sendingInfo();    }    public void sendingInfo() {        if (lat > 0 && lng > 0 && !NOTIFY) {  // !NOTIFY는 아직 신고가 접수되지 않았을 경우에만 전송하라는 뜻이다.            String[] temp = addr.split(" ");            addr = "";            for (int i = 0; i < temp.length - 1; i++) {                addr = addr + temp[i] + "%20";            }            addr = addr + temp[temp.length - 1];            Log.d("safeme", "onLocationChanged : " + lat + ", " + lng + ", " + addr);            //Toast.makeText(getApplicationContext(), "onLocationChanged(" + lat + ", " + lng + "), address : "+addr, Toast.LENGTH_SHORT).show();            // Initialize Sending            logRecord.append("Initialize Sending\n");            JSONSender sendNotifyInfo = new JSONSender();            sendNotifyInfo.setHandler(myVideoHandler);            sendNotifyInfo.setFilename(myFile.getFileName());            sendNotifyInfo.setParseType(Constants.SEND_NOFITYINFO);            sendNotifyInfo.setUrl(Constants.PARSING_URL + Constants.PARSING_DIR_NOFIFYINFO                    + "?pnum=" + phonenum1 + "&fname=" + myFile.getFileName() + "&str=" + addr + "&lat=" + lat + "&lon=" + lng);            sendNotifyInfo.start();            NOTIFY = true;            Log.d("safeme", "notify : 정보가 접수됨");        } else {            NOTIFY = false;            if (gpsManager == null) {                gpsManager = new GpsManager();                gpsManager.setContext(getApplicationContext());                boolean result = gpsManager.initGps();                gpsManager.myVideoHandler = myVideoHandler;                Log.d("safeme", "notify : " + NOTIFY + ", GPS매니저 생성/초기화됨");                if(!result){                    lat = 37;                    lng = 126;                    sendingInfo();                }            }        }    }    @Override    protected void onResume(){        logRecord.append("onResume() called\n");        super.onResume();        myStreaming.toggleStreaming(); // toggle streaming        BACKPRESSED = false;    }    @Override    public void onPause(){        logRecord.append("onPause() called\n");        super.onPause();        myStreaming.toggleStreaming(); // toggle streaming    }    @Override    public void onBackPressed() {        //backpress 대신 다른 버튼을 눌러 액티비티를 종료하도록 함    }    @Override    public void onDestroy() {        logRecord.append("onDestroy() called\n");        myStreaming.destroyStreaming(); // stop streaming        super.onDestroy();    }}